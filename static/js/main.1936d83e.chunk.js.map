{"version":3,"sources":["components/GoodList/GoodList.tsx","App.tsx","index.tsx"],"names":["GoodList","state","showList","handleStart","setState","className","this","props","goods","map","good","index","id","type","onClick","React","Component","goodsFromServer","App","isReverse","isSortedByAlph","isSortedByLeng","selectNumber","handleButtonReverse","handleButtonReset","handleButtonSort","handleButtonSortByLength","filter","item","length","buttonClass","sort","g1","g2","localeCompare","reverse","value","onChange","event","target","ReactDOM","render","document","getElementById"],"mappings":"uQAWaA,EAAb,4MACEC,MAAQ,CACNC,UAAU,GAFd,EAKEC,YAAc,WACZ,EAAKC,SAAS,CAAEF,UAAU,KAN9B,4CASE,WACE,OACE,qBAAKG,UAAU,QAAf,SACGC,KAAKL,MAAMC,SACV,oBAAIG,UAAU,cAAd,SACGC,KAAKC,MAAMC,MAAMC,KAAI,SAACC,EAAMC,GAC3B,IAAMC,EAAKD,EAAQ,EAEnB,OACE,oBAAIN,UAAU,kBAAd,SACGK,GADkCE,QAO3C,qBAAKP,UAAU,oBAAf,SACE,wBACEQ,KAAK,SACLR,UAAU,eACVS,QAASR,KAAKH,YAHhB,2BA1BZ,GAA8BY,IAAMC,WCN9BC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAUIC,E,4MACJjB,MAAQ,CACNkB,WAAW,EACXC,gBAAgB,EAChBC,gBAAgB,EAChBC,aAAc,G,EAGhBC,oBAAsB,WACpB,EAAKnB,UAAS,SAAAH,GAAK,MAAK,CACtBkB,WAAYlB,EAAMkB,e,EAItBK,kBAAoB,WAClB,EAAKpB,SAAS,CACZe,WAAW,EACXC,gBAAgB,EAChBC,gBAAgB,EAChBC,aAAc,K,EAIlBG,iBAAmB,WACjB,EAAKrB,UAAS,kBAAyB,CACrCgB,gBADY,EAAGA,eAEfC,gBAAgB,O,EAIpBK,yBAA2B,WACzB,EAAKtB,UAAS,kBAAyB,CACrCiB,gBADY,EAAGA,eAEfD,gBAAgB,O,4CAIpB,WAAU,IAAD,OACP,EAKId,KAAKL,MAJPkB,EADF,EACEA,UACAC,EAFF,EAEEA,eACAC,EAHF,EAGEA,eACAC,EAJF,EAIEA,aAEId,EAAQ,UAAIS,GAAiBU,QACjC,SAAAC,GAAI,OAAIA,EAAKC,QAAUP,KAGnBQ,EAAc,oBAgBpB,OAdAtB,EAAMmB,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUP,KAEhCF,GACFZ,EAAMuB,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGE,cAAcD,MAGtCZ,GACFb,EAAMuB,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGH,OAASI,EAAGJ,UAGpCV,GACFX,EAAM2B,UAIN,sBAAK9B,UAAU,MAAf,UACE,oBAAIA,UAAU,kBAAd,mBAEA,sBAAKA,UAAU,qBAAf,UACE,wBACEQ,KAAK,SACLR,UAAWC,KAAKL,MAAMkB,UAAX,UACJW,EADI,wBAEJA,GACPhB,QAASR,KAAKiB,oBALhB,qBASA,wBACEV,KAAK,SACLR,UAAU,oBACVS,QAASR,KAAKkB,kBAHhB,mBAOA,wBACEX,KAAK,SACLR,UAAWC,KAAKL,MAAMmB,eAAX,UACJU,EADI,wBAEJA,GACPhB,QAASR,KAAKmB,iBALhB,iCASA,wBACEZ,KAAK,SACLR,UAAWC,KAAKL,MAAMoB,eAAX,UACJS,EADI,wBAEJA,GACPhB,QAASR,KAAKoB,yBALhB,4BASA,wBACEU,MAAO9B,KAAKL,MAAMqB,aAClBe,SAAU,SAACC,GACT,EAAKlC,SAAS,CAAEkB,cAAegB,EAAMC,OAAOH,SAHhD,SAxDe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IA8D3B3B,KAAI,SAAAmB,GAAI,OACpB,wBAAmBQ,MAAOR,EAA1B,SAAiCA,GAApBA,WAKnB,cAAC,EAAD,CAAUpB,MAAOA,W,GAnHPO,IAAMC,WAyHTE,IC/IfsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1936d83e.chunk.js","sourcesContent":["import React from 'react';\nimport './GoodList.scss';\n\ntype Props = {\n  goods: string[];\n};\n\ntype State = {\n  showList: boolean;\n};\n\nexport class GoodList extends React.Component<Props, State> {\n  state = {\n    showList: false,\n  };\n\n  handleStart = () => {\n    this.setState({ showList: true });\n  };\n\n  render() {\n    return (\n      <div className=\"goods\">\n        {this.state.showList ? (\n          <ul className=\"goods__list\">\n            {this.props.goods.map((good, index) => {\n              const id = index + 1;\n\n              return (\n                <li className=\"button is-light\" key={id}>\n                  {good}\n                </li>\n              );\n            })}\n          </ul>\n        ) : (\n          <div className=\"button__container\">\n            <button\n              type=\"button\"\n              className=\"button-start\"\n              onClick={this.handleStart}\n            >\n              Start\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\n\nimport { GoodList } from './components/GoodList/GoodList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  isReverse: boolean;\n  isSortedByAlph: boolean;\n  isSortedByLeng: boolean;\n  selectNumber: number;\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isReverse: false,\n    isSortedByAlph: false,\n    isSortedByLeng: false,\n    selectNumber: 1,\n  };\n\n  handleButtonReverse = () => {\n    this.setState(state => ({\n      isReverse: !state.isReverse,\n    }));\n  };\n\n  handleButtonReset = () => {\n    this.setState({\n      isReverse: false,\n      isSortedByAlph: false,\n      isSortedByLeng: false,\n      selectNumber: 1,\n    });\n  };\n\n  handleButtonSort = () => {\n    this.setState(({ isSortedByAlph }) => ({\n      isSortedByAlph: !isSortedByAlph,\n      isSortedByLeng: false,\n    }));\n  };\n\n  handleButtonSortByLength = () => {\n    this.setState(({ isSortedByLeng }) => ({\n      isSortedByLeng: !isSortedByLeng,\n      isSortedByAlph: false,\n    }));\n  };\n\n  render() {\n    const {\n      isReverse,\n      isSortedByAlph,\n      isSortedByLeng,\n      selectNumber,\n    } = this.state;\n    const goods = [...goodsFromServer].filter(\n      item => item.length >= selectNumber,\n    );\n    const arrForSelect = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    const buttonClass = 'button is-primary';\n\n    goods.filter(item => item.length >= selectNumber);\n\n    if (isSortedByAlph) {\n      goods.sort((g1, g2) => g1.localeCompare(g2));\n    }\n\n    if (isSortedByLeng) {\n      goods.sort((g1, g2) => g1.length - g2.length);\n    }\n\n    if (isReverse) {\n      goods.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"title is-1 mt-5\">Goods</h1>\n\n        <div className=\"buttons__container\">\n          <button\n            type=\"button\"\n            className={this.state.isReverse\n              ? `${buttonClass} is-active`\n              : `${buttonClass}`}\n            onClick={this.handleButtonReverse}\n          >\n            Reverse\n          </button>\n          <button\n            type=\"button\"\n            className=\"button is-primary\"\n            onClick={this.handleButtonReset}\n          >\n            Reset\n          </button>\n          <button\n            type=\"button\"\n            className={this.state.isSortedByAlph\n              ? `${buttonClass} is-active`\n              : `${buttonClass}`}\n            onClick={this.handleButtonSort}\n          >\n            Sort alphabetically\n          </button>\n          <button\n            type=\"button\"\n            className={this.state.isSortedByLeng\n              ? `${buttonClass} is-active`\n              : `${buttonClass}`}\n            onClick={this.handleButtonSortByLength}\n          >\n            Sort by length\n          </button>\n          <select\n            value={this.state.selectNumber}\n            onChange={(event) => {\n              this.setState({ selectNumber: +event.target.value });\n            }}\n          >\n            {arrForSelect.map(item => (\n              <option key={item} value={item}>{item}</option>\n            ))}\n          </select>\n        </div>\n\n        <GoodList goods={goods} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}