{"version":3,"sources":["components/GoodList/GoodList.tsx","App.tsx","index.tsx"],"names":["GoodList","goods","className","map","good","index","id","goodsFromServer","App","state","isReverse","isSortedByAlph","isSortedByLeng","showList","selectNumber","handleStart","setState","handleButtonReverse","handleButtonReset","handleButtonSort","handleButtonSortByLength","this","filter","item","length","buttonClass","sort","g1","g2","reverse","type","onClick","value","onChange","event","target","React","Component","ReactDOM","render","document","getElementById"],"mappings":"uQAOaA,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,qBAAKC,UAAU,QAAf,SACE,oBAAIA,UAAU,cAAd,SACGD,EAAME,KAAI,SAACC,EAAMC,GAChB,IAAMC,EAAKD,EAAQ,EAEnB,OACE,oBAAIH,UAAU,kBAAd,SACGE,GADkCE,WCV3CC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAWIC,E,4MACJC,MAAe,CACbC,WAAW,EACXC,gBAAgB,EAChBC,gBAAgB,EAChBC,UAAU,EACVC,aAAc,G,EAGhBC,YAAc,WACZ,EAAKC,SAAS,CAAEH,UAAU,K,EAG5BI,oBAAsB,WACpB,EAAKD,UAAS,SAAAP,GAAK,MAAK,CACtBC,WAAYD,EAAMC,e,EAItBQ,kBAAoB,WAClB,EAAKF,SAAS,CACZN,WAAW,EACXC,gBAAgB,EAChBC,gBAAgB,EAChBE,aAAc,K,EAIlBK,iBAAmB,WACjB,EAAKH,UAAS,kBAAyB,CACrCL,gBADY,EAAGA,eAEfC,gBAAgB,O,EAIpBQ,yBAA2B,WACzB,EAAKJ,UAAS,kBAAyB,CACrCJ,gBADY,EAAGA,eAEfD,gBAAgB,O,4CAIpB,WAAU,IAAD,OACP,EAMIU,KAAKZ,MALPC,EADF,EACEA,UACAC,EAFF,EAEEA,eACAC,EAHF,EAGEA,eACAC,EAJF,EAIEA,SACAC,EALF,EAKEA,aAEIb,EAAQ,UAAIM,GAAiBe,QACjC,SAAAC,GAAI,OAAIA,EAAKC,QAAUV,KAGnBW,EAAc,oBAcpB,OAZId,GACFV,EAAMyB,OAGJd,GACFX,EAAMyB,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGH,OAASI,EAAGJ,UAGpCd,GACFT,EAAM4B,UAIN,sBAAK3B,UAAU,MAAf,UACE,oBAAIA,UAAU,kBAAd,mBAEA,sBAAKA,UAAU,qBAAf,UACE,wBACE4B,KAAK,SACL5B,UAAWmB,KAAKZ,MAAMC,UAAX,UACJe,EADI,wBAEJA,GACPM,QAASV,KAAKJ,oBALhB,qBASA,wBACEa,KAAK,SACL5B,UAAU,oBACV6B,QAASV,KAAKH,kBAHhB,mBAOA,wBACEY,KAAK,SACL5B,UAAWmB,KAAKZ,MAAME,eAAX,UACJc,EADI,wBAEJA,GACPM,QAASV,KAAKF,iBALhB,iCASA,wBACEW,KAAK,SACL5B,UAAWmB,KAAKZ,MAAMG,eAAX,UACJa,EADI,wBAEJA,GACPM,QAASV,KAAKD,yBALhB,4BASA,wBACEY,MAAOX,KAAKZ,MAAMK,aAClBmB,SAAU,SAACC,GACT,EAAKlB,SAAS,CAAEF,cAAeoB,EAAMC,OAAOH,SAHhD,SAtDe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IA4D3B7B,KAAI,SAAAoB,GAAI,OACpB,wBAAmBS,MAAOT,EAA1B,SAAiCA,GAApBA,WAKlBV,EACC,cAAC,EAAD,CAAUZ,MAAOA,IAEjB,qBAAKC,UAAU,oBAAf,SACE,wBACE4B,KAAK,SACL5B,UAAU,eACV6B,QAASV,KAAKN,YAHhB,4B,GA3HMqB,IAAMC,WAyIT7B,IChKf8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.425d970d.chunk.js","sourcesContent":["import React from 'react';\nimport './GoodList.scss';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodList: React.FC<Props> = ({ goods }) => {\n  return (\n    <div className=\"goods\">\n      <ul className=\"goods__list\">\n        {goods.map((good, index) => {\n          const id = index + 1;\n\n          return (\n            <li className=\"button is-light\" key={id}>\n              {good}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.css';\n\nimport { GoodList } from './components/GoodList/GoodList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  isReverse: boolean;\n  isSortedByAlph: boolean;\n  isSortedByLeng: boolean;\n  showList: boolean;\n  selectNumber: number;\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    isReverse: false,\n    isSortedByAlph: false,\n    isSortedByLeng: false,\n    showList: false,\n    selectNumber: 1,\n  };\n\n  handleStart = () => {\n    this.setState({ showList: true });\n  };\n\n  handleButtonReverse = () => {\n    this.setState(state => ({\n      isReverse: !state.isReverse,\n    }));\n  };\n\n  handleButtonReset = () => {\n    this.setState({\n      isReverse: false,\n      isSortedByAlph: false,\n      isSortedByLeng: false,\n      selectNumber: 1,\n    });\n  };\n\n  handleButtonSort = () => {\n    this.setState(({ isSortedByAlph }) => ({\n      isSortedByAlph: !isSortedByAlph,\n      isSortedByLeng: false,\n    }));\n  };\n\n  handleButtonSortByLength = () => {\n    this.setState(({ isSortedByLeng }) => ({\n      isSortedByLeng: !isSortedByLeng,\n      isSortedByAlph: false,\n    }));\n  };\n\n  render() {\n    const {\n      isReverse,\n      isSortedByAlph,\n      isSortedByLeng,\n      showList,\n      selectNumber,\n    } = this.state;\n    const goods = [...goodsFromServer].filter(\n      item => item.length >= selectNumber,\n    );\n    const arrForSelect = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    const buttonClass = 'button is-primary';\n\n    if (isSortedByAlph) {\n      goods.sort();\n    }\n\n    if (isSortedByLeng) {\n      goods.sort((g1, g2) => g1.length - g2.length);\n    }\n\n    if (isReverse) {\n      goods.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"title is-1 mt-5\">Goods</h1>\n\n        <div className=\"buttons__container\">\n          <button\n            type=\"button\"\n            className={this.state.isReverse\n              ? `${buttonClass} is-active`\n              : `${buttonClass}`}\n            onClick={this.handleButtonReverse}\n          >\n            Reverse\n          </button>\n          <button\n            type=\"button\"\n            className=\"button is-primary\"\n            onClick={this.handleButtonReset}\n          >\n            Reset\n          </button>\n          <button\n            type=\"button\"\n            className={this.state.isSortedByAlph\n              ? `${buttonClass} is-active`\n              : `${buttonClass}`}\n            onClick={this.handleButtonSort}\n          >\n            Sort alphabetically\n          </button>\n          <button\n            type=\"button\"\n            className={this.state.isSortedByLeng\n              ? `${buttonClass} is-active`\n              : `${buttonClass}`}\n            onClick={this.handleButtonSortByLength}\n          >\n            Sort by length\n          </button>\n          <select\n            value={this.state.selectNumber}\n            onChange={(event) => {\n              this.setState({ selectNumber: +event.target.value });\n            }}\n          >\n            {arrForSelect.map(item => (\n              <option key={item} value={item}>{item}</option>\n            ))}\n          </select>\n        </div>\n\n        {showList ? (\n          <GoodList goods={goods} />\n        ) : (\n          <div className=\"button__container\">\n            <button\n              type=\"button\"\n              className=\"button-start\"\n              onClick={this.handleStart}\n            >\n              Start\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}